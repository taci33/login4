@page
@using login4.Models

<h2 class="content-block">Home</h2>
@(Html.DevExtreme().DataGrid<login4.Models.EF.ClientesUser>()
    .DataSource(ds => ds.Mvc()
        .Controller("ClientesUsers")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
   .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 5, 10, 20 });
        pager.ShowInfo(true);
    })
    .RemoteOperations(true)
    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .Grouping(g => g.AutoExpandAll(false))
    .GroupPanel(gp => gp.Visible(true))
    .Columns(columns =>
    {

        columns.AddFor(m => m.Id);

        columns.AddFor(m => m.UserName);

        columns.AddFor(m => m.NormalizedUserName);

        columns.AddFor(m => m.Email);

        columns.AddFor(m => m.NormalizedEmail);

        columns.AddFor(m => m.EmailConfirmed);

        columns.AddFor(m => m.SecurityStamp);

        columns.AddFor(m => m.ConcurrencyStamp);

        columns.AddFor(m => m.PhoneNumber);

        columns.AddFor(m => m.PhoneNumberConfirmed);

        columns.AddFor(m => m.TwoFactorEnabled);

        columns.AddFor(m => m.LockoutEnd);

        columns.AddFor(m => m.LockoutEnabled);

        columns.AddFor(m => m.AccessFailedCount);
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
    )
)