@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Soltic</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://unpkg.com/devextreme-quill@22_2/dist/dx-quill.min.js"></script> *@

    @* Uncomment to use the Gantt control *@
    @*<link href="~/css/devextreme/dx-gantt.css" rel="stylesheet" />*@

    @* Uncomment to use the Diagram control *@
    @*<link href="~/css/devextreme/dx-diagram.css" rel="stylesheet" />*@

    @* Custom theme with a color swatch *@
    @* Docs: https://js.devexpress.com/DevExtreme/Guide/Themes_and_Styles/Predefined_Themes/#Color_Swatches *@
    <link href="~/css/devextreme/theme.base.css" rel="stylesheet" />
    <link href="~/css/devextreme/theme.additional.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/css/Site.css" />
    <link rel="stylesheet" href="~/css/toolbar.css" />
    

    @* Uncomment to use the Gantt control *@
    @*<script src="~/js/devextreme/dx-gantt.js"></script>*@

    @* Uncomment to use the Diagram control *@
    @*<script src="~/js/devextreme/dx-diagram.js"></script>*@

    <script src="~/js/devextreme/jquery.js"></script>
   
    @* Uncomment to use Globalize for localization *@
    @* Docs: https://docs.devexpress.com/AspNetCore/400577#globalize *@
@*    <script src="~/js/devextreme/cldr.js"></script>
    <script src="~/js/devextreme/cldr/event.js"></script>
    <script src="~/js/devextreme/cldr/supplemental.js"></script>
    <script src="~/js/devextreme/cldr/unresolved.js"></script>
    <script src="~/js/devextreme/globalize.js"></script>
    <script src="~/js/devextreme/globalize/message.js"></script>
    <script src="~/js/devextreme/globalize/number.js"></script>
    <script src="~/js/devextreme/globalize/currency.js"></script>
    <script src="~/js/devextreme/globalize/date.js"></script>*@

  
    @* Uncomment to enable client-side export 
    @*<script src="~/js/devextreme/jszip.js"></script>*@

    <script src="~/js/devextreme/dx.all.js"></script>

    @* Uncomment to provide geo-data for the VectorMap control *@
    @* Docs: https://js.devexpress.com/DevExtreme/Guide/Widgets/VectorMap/Providing_Data/#Data_for_Areas *@
    @*<script src="~/js/devextreme/vectormap-data/world.js"></script>*@
   
    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
    <script src="~/ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

</head>

<body class="dx-viewport">
    <div id="app-side-nav-outer-toolbar">
        <div class="layout-header">

            @(
                Html.DevExtreme().Toolbar()

                .Items(items =>
                {
                    items.Add()
                    .Widget(w => w
                    .Button()
                    .Icon("menu")
                    .OnClick("login4.onMenuButtonClick")
                    )
                    .Location(ToolbarItemLocation.Before)
                    .CssClass("menu-button");
                    items.Add()
                    .Html("<div><a href=https://www.soltic.es>Soltic</a></div>")

                    .Location(ToolbarItemLocation.Before)
                    .CssClass("header-title");

                    if (SignInManager.IsSignedIn(User))
                    {
                      

                        items.Add()
                            .Html("<div><a href=/GestionUsuarios/LogoutEx><i class='dx-icon-close'></i>Cerrar Sesión</a></div>")

                            .Location(ToolbarItemLocation.After);

                    }
                  
                })
                )
        </div>
        <div class="layout-body layout-body-hidden">
            @(Html.DevExtreme().Drawer()
                .ID("layout-drawer")
                .Position(DrawerPosition.Left)
                .Opened(new JS("login4.restoreDrawerOpened()"))
                .CloseOnOutsideClick(false)
                .Content(@<text>
                    <div id="layout-drawer-scrollview" class="with-footer">
                        <div class="content">
                            @RenderBody()
                        </div>
                        <div class="content-block">
                            <div class="content-footer">
                                <div id="footer">
                                    
                                    <br />
                                </div>
                            </div>
                        </div>
                    </div>
                </text>)
                .Template(new TemplateName("navigation-menu"))
                )
        </div>
    </div>


    @using (Html.DevExtreme().NamedTemplate("navigation-menu"))
    {
        <div class="menu-container dx-swatch-additional">

            @functions {
            string GetUrl(string pageName) => Url.Page(pageName);
            string GetCurrentUrl() => Url.Page(ViewContext.RouteData.Values["page"].ToString());
            bool IsCurrentUrl(string pageName) => GetUrl(pageName) == GetCurrentUrl();
            string GetAspUrl(string pagename) => Url.Content(pagename);

        }



        @(
                Html.DevExtreme().TreeView()

                                .Items(items =>
                                {
                                    items.Add()
                                    .Text("Home")
                                    .Icon("home")
                                    .Option("path", GetUrl("/Index"))
                                    .Selected(IsCurrentUrl("/Index"));

                                    items.Add()
                                    .Text("About")
                                    .Icon("info")
                                    .Option("path", GetUrl("/About"))
                                    .Selected(IsCurrentUrl("/About"));

                                    if (User.IsInRole("Usuario")){
                                    items.Add()
                                    .Text("Facturas")
                                    .Icon("folder")
                                    .Option("path", GetUrl("/DataGrids/Facturas"))
                                    .Selected(IsCurrentUrl("/DataGrids/Facturas"));
                                    }
                                                   
                                   if (User.IsInRole("Administrador"))
                                    { 
                                    
                                        @*items.Add()
                                        .Text("Registrar")
                                        .Icon("card")
                                        .Option("path", GetAspUrl("/GestionUsuarios/RegisterEx"))
                                        .Selected(IsCurrentUrl("/GestionUsuarios/RegisterEx"));*@

                                         items.Add()
                                        .Text("RegistrarClientes")
                                        .Icon("card")
                                        .Option("path", GetAspUrl("/GestionUsuarios/RegistrarCliente"))
                                        .Selected(IsCurrentUrl("/GestionUsuarios/RegistrarCliente"));
                                   }
                                    if (!SignInManager.IsSignedIn(User))
                                    {
                                     items.Add()
                                    .Text("Login")
                                    .Icon("card")
                                    .Option("path", GetAspUrl("/GestionUsuarios/LoginEx"))
                                    .Selected(IsCurrentUrl("/GestionUsuarios/LoginEx"));
                                    }
                                   

                    if (User.IsInRole("Administrador"))
                    {

                        var AjustesItem = items.Add()
                        .Text("Ajustes")
                        .Icon("preferences");

               
                        {
                            AjustesItem.Expanded(false);
                        }

                        AjustesItem.Items(AjustesSubItems =>
                        {
                            AjustesSubItems.Add()
                    .Text("Email")
                    .Icon("card")
                    .Option("path", GetAspUrl("/SuperAdmin/CambioEmail"))
                    .Selected(IsCurrentUrl("/SuperAdmin/CambioEmail"));
                            AjustesSubItems.Add()
                    .Text("Token")
                    .Icon("card")
                    .Option("path", GetAspUrl("/SuperAdmin/CambioToken"))
                    .Selected(IsCurrentUrl("/SuperAdmin/CambioToken"));
                            
                        });
                    }

                    if (User.IsInRole("Administrador") || User.IsInRole("Cliente"))
                    {
                           
                                    var clientesItem = items.Add()
                                    .Text("Clientes")
                                    .Icon("folder");

                      
                                    {
                                        clientesItem.Expanded(false);
                                    }

                                    clientesItem.Items(clientesSubItems =>
                                    {
                                        clientesSubItems.Add()
                                    .Text("Sin registrar")
                                    .Icon("folder")
                                    .Option("path", GetAspUrl("/DataGrids/ClientesSinRegistrar"))
                                    .Selected(IsCurrentUrl("/DataGrids/ClientesSinRegistrar"));

                                        clientesSubItems.Add()
                                    .Text("Bloqueados")
                                    .Icon("folder")
                                    .Option("path", GetAspUrl("/DataGrids/ClientesBloqueados"))
                                    .Selected(IsCurrentUrl("/DataGrids/ClientesBloqueados"));

                                        clientesSubItems.Add()
                                    .Text("Pendientes")
                                    .Icon("folder")
                                    .Option("path", GetAspUrl("/DataGrids/ClientesPendientes"))
                                    .Selected(IsCurrentUrl("/DataGrids/ClientesPendientes"));

                                        clientesSubItems.Add()
                                    .Text("Registrados")
                                    .Icon("folder")
                                    .Option("path", GetAspUrl("/DataGrids/ClientesRegistrados"))
                                    .Selected(IsCurrentUrl("/DataGrids/ClientesRegistrados"));


       
                                    });
                                }
                            

               })
                .ExpandEvent(TreeViewExpandEvent.Click)
                .SelectionMode(NavSelectionMode.Single)
                .SelectedExpr("selected")
                .FocusStateEnabled(false)
                .Width(250)
                .OnItemClick("login4.onTreeViewItemClick")
                )

        </div>
    }
  
    <script>

        DevExpress.localization.locale("es");

        var login4 = (function () {

            var DRAWER_OPENED_KEY = "login4-drawer-opened";

            var breakpoints = {
                xSmallMedia: window.matchMedia("(max-width: 599.99px)"),
                smallMedia: window.matchMedia("(min-width: 600px) and (max-width: 959.99px)"),
                mediumMedia: window.matchMedia("(min-width: 960px) and (max-width: 1279.99px)"),
                largeMedia: window.matchMedia("(min-width: 1280px)")
            };

            function getDrawer() {
                return $("#layout-drawer").dxDrawer("instance");
            }

            function restoreDrawerOpened() {
                var isLarge = breakpoints.largeMedia.matches;
                if (!isLarge)
                    return false;

                var state = sessionStorage.getItem(DRAWER_OPENED_KEY);
                if (state === null)
                    return isLarge;

                return state === "true";
            }

            function saveDrawerOpened() {
                sessionStorage.setItem(DRAWER_OPENED_KEY, getDrawer().option("opened"));
            }

            function updateDrawer() {
                var isXSmall = breakpoints.xSmallMedia.matches,
                    isLarge = breakpoints.largeMedia.matches;

                getDrawer().option({
                    openedStateMode: isLarge ? "shrink" : "overlap",
                    revealMode: isXSmall ? "slide" : "expand",
                    minSize: isXSmall ? 0 : 60,
                    shading: !isLarge,
                });
            }

            function init() {
                $("#layout-drawer-scrollview").dxScrollView({ direction: "vertical" });

                $.each(breakpoints, function (_, size) {
                    size.addListener(function (e) {
                        if (e.matches)
                            updateDrawer();
                    });
                });

                updateDrawer();

                $('.layout-body').removeClass('layout-body-hidden');
            }

            function navigate(url, delay) {
                if (url)
                    setTimeout(function () { location.href = url }, delay);
            }

            function onMenuButtonClick() {
                getDrawer().toggle();
                saveDrawerOpened();
            }
            

            function onTreeViewItemClick(e) {
                var drawer = getDrawer();
                var savedOpened = restoreDrawerOpened();
                var actualOpened = drawer.option("opened");0

                if (!actualOpened) {
                    drawer.show();
                } else {
                    var willHide = !savedOpened || !breakpoints.largeMedia.matches;
                    var willNavigate = !e.itemData.selected;

                    if (willHide)
                        drawer.hide();

                    if (willNavigate)
                        navigate(e.itemData.path, willHide ? 400 : 0);
                }
            }

            return {
                init: init,
                restoreDrawerOpened: restoreDrawerOpened,
                onMenuButtonClick: onMenuButtonClick,
                onTreeViewItemClick: onTreeViewItemClick
            };
        })();

        document.addEventListener("DOMContentLoaded", function documentReady() {
            this.removeEventListener("DOMContentLoaded", documentReady);
            login4.init();
        });
    </script>
</body>


</html>
